
breedthreads	= 1
evalthreads	= 1
seed.0		= time

generations =	100
quit-on-run-complete =	true
checkpoint = false
checkpoint-prefix = ec
checkpoint-modulo = 1

state 		= ec.simple.SimpleEvolutionState
pop			= ec.Population
init		= ec.simple.SimpleInitializer
finish		= ec.simple.SimpleFinisher
breed 		= ec.simple.SimpleBreeder
eval 		= ec.coevolve.CompetitiveEvaluator
stat		= ec.simple.SimpleStatistics
exch 		= ec.simple.SimpleExchanger


pop.subpops =				1
pop.subpop.0 = 				ec.Subpopulation
pop.subpop.0.size =			100
pop.subpop.0.duplicate-retries =	2

pop.subpop.0.species.pipe.num-inds = 	2

pop.subpop.0.species		= ec.vector.FloatVectorSpecies
pop.subpop.0.species.ind	= ec.vector.FloatVectorIndividual
pop.subpop.0.species.fitness 	= ec.simple.SimpleFitness
pop.subpop.0.species.min-gene	= 0
pop.subpop.0.species.max-gene 	= 1	
pop.subpop.0.species.genome-size	= 20
pop.subpop.0.species.crossover-type	= two
pop.subpop.0.species.mutation-type	= reset
pop.subpop.0.species.mutation-prob	= 0.05

pop.subpop.0.species.pipe			= ec.vector.breed.VectorMutationPipeline
pop.subpop.0.species.pipe.source.0		= ec.vector.breed.VectorCrossoverPipeline
pop.subpop.0.species.pipe.source.0.source.0	= ec.select.TournamentSelection
pop.subpop.0.species.pipe.source.0.source.1	= ec.select.TournamentSelection

select.tournament.size		= 2

eval.style = round-robin

eval.problem = PlayerCompete

stat.file	$out.stat

